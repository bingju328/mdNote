---
apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${PROJECT_NAME}
    monitor: 'true'
spec:
  ports:
    - port: ${PORT}
      name: ${PROJECT_NAME}
    - port: ${LIVENESS_PORT}
      name: management-port
  clusterIP: None
  selector:
    app: ${PROJECT_NAME}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
        monitor: 'true'
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - ${PROJECT_NAME}
              weight: 1
      imagePullSecrets:
        - name: aliyun
      containers:
        - name: ${PROJECT_NAME}
          image: ${IMAGE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: ${LIVENESS_PATH}
              port: ${LIVENESS_PORT}
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 180
          readinessProbe:
            httpGet:
              path: ${LIVENESS_PATH}
              port: ${LIVENESS_PORT}
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: ${REQUEST_CPU}
              memory: ${MEMORY}
            limits:
              memory: ${MEMORY}
          ports:
            - containerPort: ${PORT}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "test,k8s"
            - name: JAVA_OPTS
              value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
            - name: SPRING_CLOUD_CONSUL_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - mountPath: /log
              name: applog
              readOnly: false
      volumes:
        - name: applog
          hostPath:
            path: /data/log
            type: DirectoryOrCreate